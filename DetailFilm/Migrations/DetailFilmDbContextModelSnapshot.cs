// <auto-generated />
using System;
using DetailFilm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DetailFilm.Migrations
{
    [DbContext(typeof(DetailFilmDbContext))]
    partial class DetailFilmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DetailFilm.Models.DetailFilm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acteurs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AgeMinimum")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateSortieFilm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateSortiePlateforme")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptionLongue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("uuid");

                    b.Property<string>("Realisateurs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DetailFilms");
                });
#pragma warning restore 612, 618
        }
    }
}
